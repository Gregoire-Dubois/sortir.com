{% extends 'base.html.twig' %}

{% block title %}
    {{ parent() }} | Créer une sortie
{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="{{ asset('css/creerUneSortie.css') }}">
    <link rel="stylesheet" href="{{ asset('css/popupAjouterUnLieu.css') }}">
{% endblock %}

{% block body %}
    <section class="default_container">
        <h2>Créer une sortie</h2>
        <!-- Formulaire de création d'une sortie-->
        {{ form_start(SortieType, {'attr': {'class': 'form_container', 'id' : 'form_sortie'}}) }}
        <!-- Bloc Formulaire -->

        <label for="event_name" class="column1 row1 default_label">Nom de la sortie :</label>
        <div class="column2-5 row1 default_input"
             id="event_name">{{ form_row(SortieType.nom, {'label': false, 'attr': {'required': 'required'}}) }}</div>

        <label for="event_date_begin" class="column1 row2 default_label">Date et heure de la sortie :</label>
        <div class="column2-4 row2 default_input"
             id="event_date_begin">{{ form_row(SortieType.dateDebut, {'label': false,'attr': {'required': 'required'}}) }}</div>

        <label for="event_deadline_registration" class="column1 row3 default_label">Date limite d'inscription :</label>
        <div class="column2-4 row3 default_input"
             id="event_deadline_registration">{{ form_row(SortieType.dateLimiteInscription, {'label': false,'attr': {'required': 'required'}}) }}</div>

        <label for="event_number_places" class="column1 row4 default_label">Nombre de places :</label>
        <div class="column2 row4 default_input"
             id="event_number_places">{{ form_row(SortieType.nbInscritptionMax, {'label': false,'attr': {'required': 'required'}}) }}</div>
        <span id="event_person_number">personnes</span>

        <label for="event_duration" class="column1 row5 default_label">Durée :</label>
        <div class="column2 row5 default_input"
             id="event_duration">{{ form_row(SortieType.duree, {'label': false,'attr': {'required': 'required'}}) }}</div>
        <span id="event_duration_unit">minutes</span>

        <label for="event_description" class="column1 row6 default_label">Description et infos :</label>
        <div class="column2-5 row6 default_textarea"
             id="event_description">{{ form_row(SortieType.description, {'label': false,'attr': {'required': 'required'}}) }}</div>

        <label class="column6 row1 default_label">Campus</label>
        <div class="column7-9 row1 default_span"
             id="event_campus">{{ form_row(SortieType.campus, {'label': false}) }}</div>

        <label for="event_city" class="column6 row2 default_label">Ville :</label>
        <div class="column7-8 row2 default_select"
             id="event_city">{{ form_row(SortieType.ville, {'label': false}) }}</div>
        <button id="add_city_button" formnovalidate>+</button>

        <label for="event_place" class="column6 row3 default_label">Lieu :</label>
        <div class="column7-8 row3 default_select"
             id="event_place">{{ form_row(SortieType.lieu, {'label': false,'attr': {'required': 'required'}}) }}</div>
        <button id="add_place_button" formnovalidate>+</button>

        <label class="column6 row4 default_label">Rue</label>
        <span class="column7-9 row4 default_span" id="event_street"></span>

        <label class="column6 row5 default_label">Code postal</label>
        <span class="column7 row5 default_span" id="event_postal_code"></span>

        <label class="column6 row6 default_label">Latitude</label>
        <span class="column7-8 row6 default_span" id="event_latitude"></span>

        <label class="column6 row7 default_label">Longitude</label>
        <span class="column7-8 row7 default_span" id="event_longitude"></span>

        <div class="row8 creation_event_button">
            <div class="default_tertiary_button" id="creation_event_save">{{ form_row(SortieType.creer) }}</div>
            <div class="default_tertiary_button" id="creation_event_save">{{ form_row(SortieType.publier) }}</div>
            <div></div><button class="default_secondary_button" id="creation_event_cancel" formnovalidate>Annuler</button></div>

        </div>
        {{ form_end(SortieType) }}
    </section>

    <!-- Popup "Ajouter un lieu" -->
    <div class="default_popup_container" id="popup_add_place">
        <!-- Overlay pour donner un arrière-plan assombri -->
        <div class="default_popup_overlay" id="popup_overlay"></div>
    </div>

    {% block javascripts %}

        <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
        <!--Script qui affiche dynamiquement les infos des villes et des lieux-->
        <script src="{{ asset('/js/formSortieLieuParVille.js') }}" defer></script>

        <script>
            document.addEventListener("DOMContentLoaded", function() {
                let sortieFormData = new FormData();

                // Affichage du formulaire dans la modale
                document.getElementById("add_place_button").addEventListener("click", function(e) {
                    e.preventDefault();

                    // Effectuez une requête AJAX pour récupérer le contenu du formulaire
                    let xhr = new XMLHttpRequest();

                    xhr.open("GET", "/sorties/lieu/afficher"); // L'URL associée à votre action du contrôleur

                    xhr.onload = function() {
                        if (xhr.status === 200) {
                            // Ajoutez le contenu de la modale dans le DOM
                            //console.log(xhr.responseText)
                            //console.log(xhr.status)
                            document.getElementById("popup_add_place").innerHTML = xhr.responseText;
                            //console.log(document.getElementById("popup_add_place").innerHTML)
                            // Affichez la modale
                            document.getElementById("popup_add_place").style.display = "block";

                            // Avant d'enregistrer les données, vérifier si une ville a été sélectionnée dans le formulaire de sortie
                            let sortieVilleSelect = document.getElementById("sortie_ville");
                            console.log(sortieVilleSelect)
                            //console.log(sortieLieuSelect)
                            //if (sortieVilleSelect.selectedIndex !== -1) {
                            //    selectedVilleId = sortieVilleSelect.value;
                            //}

                        } else {
                            console.error("Erreur lors de la requête AJAX");
                        }
                    };
                    xhr.send();
                });

                // Enregistrement des données
                document.addEventListener("click", function(e) {
                    if (e.target.id === "confirm_add_place_button") {
                        e.preventDefault();
                        let formData = new FormData(document.getElementById("form_lieu"));

                        // Avant d'enregistrer les données, vérifier si une ville a été sélectionnée dans le formulaire de sortie
                        let sortieLieuSelect = document.getElementById("sortie_ville");
                        //console.log(sortieLieuSelect)
                        if (sortieLieuSelect.selectedIndex !== -1) {
                            selectedVilleId = sortieLieuSelect.value;
                        }

                        let xhr = new XMLHttpRequest();
                        xhr.open("POST", "/sorties/lieu/creation"); // L'URL associée à votre action du contrôleur
                        xhr.onload = function() {
                            if (xhr.status === 200) {
                                // Gérer la réponse du serveur en cas de succès (vous pouvez ajouter la logique souhaitée ici)
                                console.log("Données enregistrées avec succès !");

                                // Cacher la modale après l'enregistrement
                                document.getElementById("popup_add_place").style.display = "none";

                                // Mise à jour du formulaire de sortie avec le nouveau lieu
                                let response = JSON.parse(xhr.responseText);
                                let lieuSelect = document.getElementById("sortie_lieu"); // ID du champ lieu dans le formulaire de sortie

                                // Sélectionner le nouveau lieu dans le formulaire de sortie si une ville a été choisie
                                if (selectedVilleId) {
                                    lieuSelect.value = selectedVilleId;
                                }

                                // Créer une nouvelle option pour le nouveau lieu
                                let newOption = document.createElement("option");
                                newOption.value = response.id;
                                newOption.text = response.nom;
                                lieuSelect.appendChild(newOption);

                                // Sélectionner le nouveau lieu dans le formulaire de sortie
                                newOption.selected = true;

                                // Réaffecter les données du formulaire de sortie
                                for (let pair of sortieFormData.entries()) {
                                    let key = pair[0];
                                    let value = pair[1];
                                    if (key !== "lieu") {
                                        document.getElementById("form_sortie_" + key).value = value;
                                    }
                                }
                            } else {
                                console.error("Erreur lors de la soumission du formulaire en AJAX");
                            }
                        };
                        xhr.send(formData);
                    }
                });

                // Cacher la modale lorsque l'utilisateur clique sur le bouton "Fermer" ou en dehors de la modale
                document.addEventListener("click", function(e) {
                    if (e.target.classList.contains("modal")) {
                        document.querySelector(".modal").style.display = "none";
                    }
                });
            });
        </script>

    {% endblock %}

{% endblock %}